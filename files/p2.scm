(define fibs #(1 1 2 3))
(define (fib n)
        (let ((len (vector-length fibs))
             )
             (if (< n len)
                 (vector-ref fibs n)
                 (let ((n-1 (fib (- n 1)))
                       (n-2 (fib (- n 2)))
                       (res (+ n-1 n-2))
                      )
                      (begin
                          (vector-append! fibs res)
                          res
                      )
                 )
             )
        )
)
(define (iter csum i)
        (let ((cfib (fib i)))
            (if (<= cfib 4000000)
                (if (even? cfib)
                    (iter (+ csum cfib) (+ i 1))
                    (iter csum (+ i 1))
                )
                csum
            )
        )
)
(iter 0 0)
